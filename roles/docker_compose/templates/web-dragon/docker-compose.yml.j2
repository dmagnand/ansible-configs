services:
  # Webserver - reverse proxying all the other containers
  nginx:
    image: macbre/nginx-http3:latest
    container_name: nginx
    volumes:
      - './nginx/conf.d:/etc/nginx/conf.d/:ro'
      - './nginx/nginx.conf:/etc/nginx/nginx.conf:ro'
      - './nginx/configs:/etc/nginx/configs:ro'
      - './nginx/ssl/dhparam.pem:/etc/nginx/ssl/dhparam.pem:ro'
      - './nginx/logs/:/var/log/nginx:rw'
      - './nginx/goaccess:/usr/share/nginx/html/logs:ro'
      - './website/public:/usr/share/nginx/html/website:ro'
      - './letsencrypt/etc:/etc/letsencrypt:ro'
    restart: on-failure:5
    ports:
      - 80:80
      - 443:443/tcp
      - 443:443/udp
    labels:
      - "diun.enable=true"

  # SSL certs
  certbot:
    image: certbot/dns-cloudflare:latest
    container_name: certbot
    volumes:
      - "./letsencrypt/etc:/etc/letsencrypt"
      - "./letsencrypt/var:/var/lib/letsencrypt"
    entrypoint: "/bin/sh -c 'trap exit TERM; sleep 10; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    labels:
      - "diun.enable=true"
    restart: always

  # Reddit frontend
  libreddit:
    image: spikecodes/libreddit:latest
    container_name: libreddit
    environment:
      LIBREDDIT_DEFAULT_AUTOPLAY_VIDEOS: {{ libreddit_default_autoplay_videos }}
      LIBREDDIT_DEFAULT_FRONT_PAGE: {{ libreddit_default_front_page }}
      LIBREDDIT_DEFAULT_SHOW_NSFW: {{ libreddit_default_show_nsfw }}
      LIBREDDIT_DEFAULT_THEME: {{ libreddit_default_theme }}
      LIBREDDIT_DEFAULT_USE_HLS: {{ libreddit_default_use_hls }}
    restart: on-failure:5
    labels:
      - "diun.enable=true"

  # Twitter frontend
  nitter:
    image: zedeus/nitter:latest
    container_name: nitter
    restart: on-failure:5
    depends_on:
      - nitter_redis
    volumes:
      - ./nitter.conf:/src/nitter.conf
    labels:
      - "diun.enable=true"

  nitter_redis:
    image: redis:6-alpine
    container_name: nitter_redis
    restart: on-failure:5
    labels:
      - "diun.enable=true"

  # Whoogle search engine
  whoogle:
    image: benbusby/whoogle-search:latest
    container_name: whoogle
    pids_limit: 50
    mem_limit: 256mb
    memswap_limit: 256mb
    user: whoogle
    security_opt:
      - no-new-privileges
    cap_drop:
      - ALL
    tmpfs:
      - /var/lib/tor/:size=10M,uid=927,gid=927,mode=1700
      - /run/tor/:size=1M,uid=927,gid=927,mode=1700
    volumes:
      - "./whoogle:/config"
    environment:
      WHOOGLE_AUTOCOMPLETE: {{ whoogle_autocomplete }}
      WHOOGLE_CONFIG_ALTS: {{ whoogle_config_alts }}
      WHOOGLE_CONFIG_LANGUAGE: {{ whoogle_config_language }}
      WHOOGLE_CONFIG_NEW_TAB: {{ whoogle_config_new_tab }}
      WHOOGLE_CONFIG_SEARCH_LANGUAGE: {{ whoogle_config_search_language }}
      WHOOGLE_CONFIG_THEME: {{ whoogle_config_theme }}
      WHOOGLE_CONFIG_URL: {{ whoogle_config_url }}
      WHOOGLE_CONFIG_VIEW_IMAGE: {{ whoogle_config_view_image }}
      WHOOGLE_RESULTS_PER_PAGE: {{ whoogle_results_per_page }}
    restart: on-failure:5
    labels:
      - "diun.enable=true"

  # Searxng search engine
  searx:
    image: searxng/searxng:latest
    container_name: searx
    command: {{ searxng_command }}
    volumes:
      - "./searxng:/etc/searxng:rw"
    environment:
      SEARXNG_HOSTNAME: {{ searxng_hostname }}
      BIND_ADDRESS: {{ bind_address }}
      BASE_URL: {{ base_url }}
      MORTY_URL: {{ morty_url }}
      MORTY_KEY: {{ morty_key }}
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    restart: on-failure:5
    labels:
      - "diun.enable=true"

  morty:
    image: dalf/morty:latest
    container_name: morty
    ports:
      - "127.0.0.1:3000:3000"
    command: -timeout 6 -ipv6
    environment:
      MORTY_KEY: {{ morty_key }}
      MORTY_ADDRESS: {{ morty_address }}
    logging:
      driver: none
    read_only: true
    cap_drop:
      - ALL
    restart: on-failure:5
    labels:
      - "diun.enable=true"

  filtron:
    image: dalf/filtron:latest
    container_name: filtron
    ports:
      - "127.0.0.1:4040:4040"
      - "127.0.0.1:4041:4041"
    command: -listen 0.0.0.0:4040 -api 0.0.0.0:4041 -target searxng:8080
    read_only: true
    cap_drop:
      - ALL
    restart: on-failure:5
    labels:
      - "diun.enable=true"

  # Bibliogram
  bibliogram:
    image: quay.io/pussthecatorg/bibliogram:latest
    container_name: bibliogram
    restart: on-failure:5
    mem_limit: 256mb
    memswap_limit: 256mb
    volumes:
      - "./bibliogram/config.js:/app/config.js"
      - "./bibliogram/db:/app/db"

  # Lingva
  lingva:
    image: thedaviddelta/lingva-translate:latest
    container_name: lingva
    restart: on-failure:5
    environment:
      dark_theme: true
      default_source_lang: auto
      default_target_lang: en
      site_domain: translate.dr460nf1r3.org

  # Netdata
  netdata:
    image: netdata/netdata:latest
    container_name: netdata
    hostname: web-dragon
    restart: always
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - ./netdata/config:/etc/netdata
      - ./netdata/lib:/var/lib/netdata
      - ./netdata/cache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
    environment:
      NETDATA_CLAIM_TOKEN: {{ netdata_claim_token }}
      NETDATA_CLAIM_URL: {{ netdata_claim_url }}

  # Deepfence
  deepfence_agent_ce:
    image: deepfenceio/deepfence_agent_ce:latest
    container_name: deepfence-agent
    pid: host
    network_mode: host
    privileged: true
    volumes:
      - "/sys/kernel/debug:/sys/kernel/debug:rw"
      - "./deepfence/logs:/var/log/fenced"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/:/fenced/mnt/host/:ro"
    environment:
      USER_DEFINED_TAGS: {{ df_user_defined_tags }}
      MGMT_CONSOLE_URL: {{ df_mgmt_console_url }}
      MGMT_CONSOLE_PORT: {{ df_mgmt_console_port }}
      DEEPFENCE_KEY: {{ df_key }}
    mem_limit: 400m
    mem_reservation: 10m
    cpus: 0.2
    restart: on-failure:5
